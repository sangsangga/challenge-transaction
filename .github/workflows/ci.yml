name: CI Pipeline

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]

permissions:
  contents: read
  actions: read
  checks: write
  pull-requests: write

env:
  JAVA_VERSION: '17'
  JAVA_DISTRIBUTION: 'temurin'

jobs:
  test:
    name: Unit & Integration Tests
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_DB: txn_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: ${{ env.JAVA_DISTRIBUTION }}
        cache: maven

    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Run Tests
      run: ./mvnw clean test
      env:
        DB_HOST: localhost
        DB_PORT: 5432
        DB_NAME: txn_test
        DB_USER: postgres
        DB_PASS: postgres
        KAFKA_BOOTSTRAP: localhost:9092
        BASE_CURRENCY: IDR
        FX_API_URL: https://api.exchangerate.host
        JWK_SET_URI: http://localhost:8080/.well-known/jwks.json

    - name: Generate Test Report
      uses: dorny/test-reporter@v1
      if: success() || failure()
      with:
        name: Test Results
        path: target/surefire-reports/*.xml
        reporter: java-junit
        fail-on-error: false
        fail-on-empty: false
        only-summary: false
        max-annotations: 10

    - name: Upload Test Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ github.run_number }}
        path: |
          target/surefire-reports/
          target/test-classes/
        retention-days: 30

    - name: Parse Test Results
      if: always()
      run: |
        # Parse test results and create detailed summary
        echo "## 🧪 Test Execution Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ -d "target/surefire-reports" ]; then
          # Count tests
          TEST_FILES=$(find target/surefire-reports -name "TEST-*.xml" | wc -l)
          TOTAL_TESTS=0
          FAILED_TESTS=0
          
          # Parse XML files for detailed results
          for file in target/surefire-reports/TEST-*.xml; do
            if [ -f "$file" ]; then
              TESTS=$(grep -o 'tests="[^"]*"' "$file" | cut -d'"' -f2)
              FAILURES=$(grep -o 'failures="[^"]*"' "$file" | cut -d'"' -f2)
              ERRORS=$(grep -o 'errors="[^"]*"' "$file" | cut -d'"' -f2)
              
              TOTAL_TESTS=$((TOTAL_TESTS + TESTS))
              FAILED_TESTS=$((FAILED_TESTS + FAILURES + ERRORS))
              
              CLASS_NAME=$(basename "$file" .xml | sed 's/TEST-//')
              if [ $((FAILURES + ERRORS)) -eq 0 ]; then
                echo "| $CLASS_NAME | ✅ Passed | $TESTS tests |" >> $GITHUB_STEP_SUMMARY
              else
                echo "| $CLASS_NAME | ❌ Failed | $TESTS tests, $((FAILURES + ERRORS)) failed |" >> $GITHUB_STEP_SUMMARY
              fi
            fi
          done
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📊 Overall Results" >> $GITHUB_STEP_SUMMARY
          echo "- **Total Tests**: $TOTAL_TESTS" >> $GITHUB_STEP_SUMMARY
          echo "- **Passed**: $((TOTAL_TESTS - FAILED_TESTS))" >> $GITHUB_STEP_SUMMARY
          echo "- **Failed**: $FAILED_TESTS" >> $GITHUB_STEP_SUMMARY
          
          if [ $FAILED_TESTS -eq 0 ]; then
            echo "- **Status**: ✅ All tests passed!" >> $GITHUB_STEP_SUMMARY
          else
            echo "- **Status**: ❌ Some tests failed" >> $GITHUB_STEP_SUMMARY
          fi
        else
          echo "| Tests | ❌ Failed | No test reports found |" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🏗️ Infrastructure" >> $GITHUB_STEP_SUMMARY
        echo "- **Database**: PostgreSQL 15 container" >> $GITHUB_STEP_SUMMARY
        echo "- **Java**: OpenJDK 17 (Temurin)" >> $GITHUB_STEP_SUMMARY
        echo "- **Build Tool**: Maven with dependency caching" >> $GITHUB_STEP_SUMMARY
        echo "- **Test Framework**: JUnit 5 + Testcontainers" >> $GITHUB_STEP_SUMMARY